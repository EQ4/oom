OOM2 is developed from the base code of MusE (Muse Sequencer) written by the mighty Werner Schweer,
and maintained and modified to the present day, by the current Muse2 maintainer Robert Jonsson and his team.

We not only willingly credit Werner for his code, but add our deepest respect and admiration as well.

Additional developers for attribution:

Nils Geisweiller

Frank Neumann

Mathias Lundgren

Joachim Schiele

Robert Jonsson

Orcan Ogetbil

Tim Donnelly


OOMidi can create LADSPA GUI's (graphical user interfaces) from
Qt designer *.ui files at runtime.
This allows a user to create or modify customized LADSPA guis without
recompiling OOMidi.

======================
   Installation
=====================

Copy the file oom/widgets/oomwidgetsplugin.so into a directory were
Qt (designer) can find it.

Example:
      if you installed Qt in /usr/qt3:
      su -c "cp -af oomwidgetsplugin.so /usr/qt3/plugins/designer"
Check:
      After starting the Qt designer you see all OOMidi specific widgets
      under Tools/OOMidi. If you cannot find any OOMidi widgets, designer
      did not find the file "oomwidgetsplugin.so".

NOTE: OOM2 is now a qt4 application (recently), so these instructions may be void.
If you manage to build ladspa guis with QT4 following the above instructions, 
and they open successfully in OOM2, please let us know.

======================
   Environment
======================

Naming:
      The Qt designer files are named after the LADSPA plugin ID.
      Example: the "freeverb" plugin has the id "1050". A gui for
            freeverb has to be named "1050.ui".
      The plugin ID is shown in the OOMidi plugin browser.

Path:
      OOMidi looks for *ui files at (oomglobalshare)/plugins/.
      If you installed OOMidi at "/usr" (configured with --prefix=/usr)
      OOMidi looks at "/usr/share/oom/plugins" for *ui files.

======================
   Creating *.ui file
======================

The association between LADSPA plugin parameters and Qt-Widgets is
done by name. All input widgets which manipulate a LADSPA parameter
must have a name starting with the letter "P" followed by the parameter
index.
      Example:
      A "Slider" widget which manipulates the 3th parameter of a
      plugin has the name "P3slider".

Supported Widgets:
      "Slider"       slider for float values
      "DoubleLabel"  entry for float values
      "QCheckbox"    to manipulate a on/off LADSPA parameter
      "QComboBox"    select from a list of named values; sets
                     integer LADSPA values

(for more hints please look at the example *.ui files)

